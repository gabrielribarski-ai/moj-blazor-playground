@page "/"
@namespace IzracunInvalidnostiBlazor
@using IzracunInvalidnostiBlazor.Services
@inject OcenjevalniModelLoader ocenjevalniModelLoader
@inject UserSessionState SessionState
@inject NavigationManager Nav
@rendermode InteractiveServer
@inject SessionStorageService Storage
@inject UserSessionState SessionState

<h3>Izberi pogoj</h3>

@if (ocenjevalniModelLoader.PogojSeznam is null)
{
    <p>Nalaganje pogojev...</p>
}
else
{
    <select @onchange="OnPogojChanged">
        <option value="">-- Izberi --</option>
        @foreach (var pogoj in ocenjevalniModelLoader.PogojSeznam)
        {
            <option value="@pogoj.PogojId">@pogoj.Sifra</option>
        }
    </select>
}

@code {

    protected override async Task OnInitializedAsync()
    {
        await ocenjevalniModelLoader.LoadPogojSeznamFromDB();
        StateHasChanged();
    }

    private async Task OnPogojChanged(ChangeEventArgs e)
    {
        Console.WriteLine($"OnPogojChanged: {e.Value}");
        string izbranPogojId = e.Value.ToString();
        //if (int.TryParse(e.Value?.ToString(), out var id))
        {
            ocenjevalniModelLoader.IzbranPogojSet(izbranPogojId);
            SessionState.IzbraniPogojId = e.Value.ToString();
            await Storage.SetItemAsync("izbraniPogojId", SessionState.IzbraniPogojId);
            Nav.NavigateTo("/oceni-invalidnost");
        }
    }
}
