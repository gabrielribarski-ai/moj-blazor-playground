@page "/izberi-pogoj"
@namespace IzracunInvalidnostiBlazor
@using IzracunInvalidnostiBlazor.Extensions
@using IzracunInvalidnostiBlazor.HelperClass
@using IzracunInvalidnostiBlazor.Models
@using IzracunInvalidnostiBlazor.Services
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.Extensions.Logging
@inject ILogger<Index> Logger
@inject DataDBLoader DataDBLoader
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager Nav
@inject UserSessionStorageService UserSessionStorage
@inject LoaderService Loader   
@inject IConfiguration _config


<h5>Izberi pogoj</h5>

@if (user?.OcenjevalniModel?.PogojSeznam != null)
{
    <div>
    <span>Št. dokumenta:&nbsp;</span>
    <span>@user.StDokumenta </span>
    </div>
    <select @onchange="OnPogojChanged">
        <option value="">-- Izberi --</option>
        @foreach (var pogoj in user?.OcenjevalniModel?.PogojSeznam)
        {
            <option value="@pogoj.PogojId">@pogoj.Sifra</option>
        }
    </select>
}

@code {

    private PrijavljenUporabnik user;
    protected override async Task OnInitializedAsync()
    {
        var loader = new DataDBLoader(_config);

        await Loader.RunWithLoader("Berem podatke", async () => {
            user = await UserSessionStorage.LoadUserAsync();
            user.OcenjevalniModel ??= new OcenjevalniModel();
            user.OcenjevalniModel.PogojSeznam = await DataDBLoader.LoadPogojSeznamAsync();
        });
    }


    private async Task OnPogojChanged(ChangeEventArgs e)
    {
        string izbranPogojId = e.Value?.ToString();

        // vse skupaj ovijemo v loader

        await Loader.RunWithLoader("Pripravljam podatke", async () =>

        {
            user.OcenjevalniModel.SegmentSeznam = await DataDBLoader.LoadSegmentSeznamAsync();
            await DataDBLoader.PreberiInPoveziAtributeDBAsync(user.OcenjevalniModel);
            await user.SetIzbranPogoj(izbranPogojId);
            await DataDBLoader.PreberiStopnjDBAsync(user.OcenjevalniModel, izbranPogojId);
            await DataDBLoader.LoadStopnjeAsync(user.OcenjevalniModel, izbranPogojId);
            await UserSessionStorage.SaveUserAsync(user);
        });

        Nav.NavigateTo("/oceni-invalidnost");
    }
}
