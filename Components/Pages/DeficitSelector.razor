@using CustomTypeExtensions
@using IzracunInvalidnostiBlazor.Models
@using System.Globalization


<label class="form-label">@Stran</label>
<select class="form-select form-select-sm deficit-selector"
        @bind="SelectedValue"
        @bind:event="onchange">
    <option value="">— izberi —</option>
    @foreach (var def in MozniZaStran)
    {
        <option value="@def.IzracunaniOdstotek?.ToString(CultureInfo.InvariantCulture)">
            @def.IzbiraOpis @(def.IzracunaniOdstotek?.ToString("0.##", CultureInfo.CurrentCulture)) %
        </option>
    }
</select>

@code {

    [Parameter] public StranLDE Stran { get; set; }
    [Parameter] public IEnumerable<MozniDeficit> MozniZaStran { get; set; } = Enumerable.Empty<MozniDeficit>();
    [Parameter] public EventCallback<(StranLDE stran, decimal? val)> OnSelectionChanged { get; set; }

    // to bo vezano na <select>
    
    private string? SelectedValue
    {
        get => MozniZaStran.FirstOrDefault(d => d.JeIzbran)
                           ?.IzracunaniOdstotek?.ToString(CultureInfo.InvariantCulture);
        set
        {
            decimal? parsed = value.AsDecimal(CultureInfo.InvariantCulture);

            foreach (var def in MozniZaStran)
            {
                def.JeIzbran = def.IzracunaniOdstotek == parsed;
            }

            OnSelectionChanged.InvokeAsync((Stran, parsed));
        }
    }
    
}