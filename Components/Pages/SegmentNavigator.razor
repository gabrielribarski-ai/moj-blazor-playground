@using IzracunInvalidnostiBlazor.Models
@using IzracunInvalidnostiBlazor.Services
@inject DataDBLoader DataDBLoader



<div class="breadcrumb">
    @foreach (var segment in breadcrumb)
    {
        <span @onclick="() => NavigateTo(segment)" style="cursor:pointer">
            @segment.Opis
        </span>
        @if (segment != breadcrumb.Last())
        {
            <span> 🞂 </span>
        }
    }
</div>

<h3>@currentSegment?.Opis</h3>

@if (children.Any())
{
    <ul>
        @foreach (var child in children)
        {
            <li @onclick="() => NavigateTo(child)" style="cursor:pointer">
                @child.Opis
            </li>
        }
    </ul>
}
else
{
    <p>Ni podrejenih segmentov. Tukaj se lahko dodajo atributi.</p>
}

@if (currentSegment?.Atributi.Any() == true)
{
    <h4>Atributi:</h4>
    <ul>
        @foreach (var atribut in currentSegment.Atributi)
        {
            /*<li>@atribut.Ime (@atribut.Tip)</li>*/
        }
    </ul>
}


@code {


    private Models.DelTelesa? currentSegment;
    private List<Models.DelTelesa> children = new();
    private List<Models.DelTelesa> breadcrumb = new();
    private OcenjevalniModel ocenjevalniModel;


    protected async override void OnInitialized()
    {
        //await ocenjevalniModelLoader.segment();
        currentSegment = ocenjevalniModel.GetRootDeliTelesa().FirstOrDefault(); // npr. TELO
        UpdateView();
    }

    private void NavigateTo(Models.DelTelesa segment)
    {
        currentSegment = segment;
        UpdateView();
    }

    private void UpdateView()
    {
        children = ocenjevalniModel.GetDelTelesaChildren(currentSegment!.DelTelesaId);
        breadcrumb = ocenjevalniModel.BreadcrumbPath; // FIX: BreadcrumbPath is a property, not a method
    }

}
